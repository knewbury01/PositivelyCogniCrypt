Using call graph algorithm CHA
Finished initializing soot
Analysis soot setup done after 1 seconds
Discovered 1 analysis seeds within 2 seconds!
ERROR StatusLogger No Log4j 2 configuration file found. Using default configuration (logging only errors to the console), or user programmatically provided configurations. Set system property 'log4j2.debug' to show Log4j 2 internal initialization logging. See https://logging.apache.org/log4j/2.x/manual/configuration.html for instructions on how to configure Log4j 2
Analysis Time: PT2.974252162S
Estimated Time: PT2.974252162S
Analyzed Objects: 1 of 2
Percentage Completed: 0.5

Ruleset: 
	com.amazonaws.services.kms.model.GenerateDataKeyRequest
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Cipher
	java.security.KeyPair
	javax.net.ssl.KeyManagerFactory
	MessageDigest
	javax.crypto.spec.PBEParameterSpec
	java.security.KeyStore
	javax.crypto.SecretKey
	java.security.spec.DSAGenParameterSpec
	java.security.Signature
	SSLSocketFactory
	javax.net.ssl.SSLParameters
	java.security.DigestInputStream
	javax.crypto.CipherInputStream
	SSLSocket
	java.security.Key
	javax.net.ssl.KeyStoreBuilderParameters
	javax.net.ssl.TrustManagerFactory
	javax.crypto.CipherOutputStream
	java.security.DigestOutputStream
	java.security.spec.DSAParameterSpec
	java.security.cert.PKIXParameters
	SSLServerSocket
	java.security.KeyPairGenerator
	java.security.AlgorithmParameters
	javax.crypto.spec.DHParameterSpec
	SSLServerSocketFactory
	javax.crypto.KeyGenerator
	javax.crypto.spec.SecretKeySpec
	Stopwatch
	javax.crypto.spec.IvParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.GCMParameterSpec
	javax.crypto.Mac
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.SecureRandom
	java.security.cert.PKIXBuilderParameters
	javax.net.ssl.SSLContext
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.TrustAnchor
	javax.net.ssl.SSLEngine

Analyzed Objects: 
	Object:
		Variable: r12
		Type: byte[]
		Statement: r12 = virtualinvoke r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <nodebox.localhistory.Repository: java.lang.String hashData(byte[])>
		SHA-256: 202d1318f11146e4a322c32dfc18b5020c03ae4a18484e395e2e603f9c308439
	Object:
		Variable: r2
		Type: java.security.MessageDigest
		Statement: r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("SHA1")
		Method: <nodebox.localhistory.Repository: java.lang.String hashData(byte[])>
		SHA-256: aa5f7cf17730f5e6d5c52f8a4ac9bd8570e5084aa553acfe94f4eae10ecd0de

Findings in Java Class: nodebox.localhistory.Repository

	 in Method: java.lang.String hashData(byte[])
		ConstraintError violating CrySL rule for MessageDigest (on Object #aa5f7cf17730f5e6d5c52f8a4ac9bd8570e5084aa553acfe94f4eae10ecd0de)
			First parameter (with value "SHA1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("SHA1")


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 44
	Number of Objects Analyzed: 2

	CogniCrypt found the following violations. For details see description above.
	ConstraintError: 1
=====================================================================
Static Analysis took 2 seconds!
Analysis finished after 7 seconds
