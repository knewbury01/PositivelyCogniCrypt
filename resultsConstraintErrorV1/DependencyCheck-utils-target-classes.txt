Using call graph algorithm CHA
Finished initializing soot
Analysis soot setup done after 0 seconds
Warning: Couldn't find any method for CryptSLMethod: javax.net.ssl.SSLSocketFactory.createSocket( _ port);
Warning: Couldn't find any method for CryptSLMethod: javax.net.ssl.SSLServerSocketFactory.createServerSocket( port);
Discovered 3 analysis seeds within 0 seconds!
ERROR StatusLogger No Log4j 2 configuration file found. Using default configuration (logging only errors to the console), or user programmatically provided configurations. Set system property 'log4j2.debug' to show Log4j 2 internal initialization logging. See https://logging.apache.org/log4j/2.x/manual/configuration.html for instructions on how to configure Log4j 2
Analysis Time: PT0.733185238S
Estimated Time: PT2.932740952S
Analyzed Objects: 1 of 5
Percentage Completed: 0.2

Analysis Time: PT0.770690707S
Estimated Time: PT1.541381412S
Analyzed Objects: 2 of 6
Percentage Completed: 0.33

Analysis Time: PT0.849204214S
Estimated Time: PT0.849204213S
Analyzed Objects: 3 of 6
Percentage Completed: 0.5

Analysis Time: PT0.857236863S
Estimated Time: PT0.42861843S
Analyzed Objects: 4 of 6
Percentage Completed: 0.67

Analysis Time: PT0.858464545S
Estimated Time: PT0.171692909S
Analyzed Objects: 5 of 6
Percentage Completed: 0.83

Ruleset: 
	com.amazonaws.services.kms.model.GenerateDataKeyRequest
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Cipher
	java.security.KeyPair
	javax.net.ssl.KeyManagerFactory
	MessageDigest
	javax.crypto.spec.PBEParameterSpec
	java.security.KeyStore
	javax.crypto.SecretKey
	java.security.spec.DSAGenParameterSpec
	java.security.Signature
	SSLSocketFactory
	javax.net.ssl.SSLParameters
	java.security.DigestInputStream
	javax.crypto.CipherInputStream
	SSLSocket
	java.security.Key
	javax.net.ssl.KeyStoreBuilderParameters
	javax.net.ssl.TrustManagerFactory
	javax.crypto.CipherOutputStream
	java.security.DigestOutputStream
	java.security.spec.DSAParameterSpec
	java.security.cert.PKIXParameters
	SSLServerSocket
	java.security.KeyPairGenerator
	java.security.AlgorithmParameters
	javax.crypto.spec.DHParameterSpec
	SSLServerSocketFactory
	javax.crypto.KeyGenerator
	javax.crypto.spec.SecretKeySpec
	Stopwatch
	javax.crypto.spec.IvParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.GCMParameterSpec
	javax.crypto.Mac
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.SecureRandom
	java.security.cert.PKIXBuilderParameters
	javax.net.ssl.SSLContext
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.TrustAnchor
	javax.net.ssl.SSLEngine

Analyzed Objects: 
	Object:
		Variable: $r4
		Type: javax.net.ssl.SSLContext
		Statement: $r4 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>("TLS")
		Method: <org.owasp.dependencycheck.utils.SSLSocketFactoryEx: void initSSLSocketFactoryEx(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>
		SHA-256: 8f3f9fc3c2c7e0e3c7216a2f357929e136b606d7fcd5dd6e2f93b7fc521b4c74
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(r0)
		Method: <org.owasp.dependencycheck.utils.Checksum: java.security.MessageDigest getMessageDigest(java.lang.String)>
		SHA-256: 39f9e72ae17b21aa0a832fce1cee6f435dbe4b6117a1b7fae0854c4abb642b30
	Object:
		Variable: r3
		Type: byte[]
		Statement: r3 = virtualinvoke r2.<java.security.MessageDigest: byte[] digest(byte[])>(r1)
		Method: <org.owasp.dependencycheck.utils.Checksum: java.lang.String getChecksum(java.lang.String,byte[])>
		SHA-256: c9ff18f21ee2c5615944270025293a7e2b94f0ad0193db8f794b4f38c1cb6786
	Object:
		Variable: r19
		Type: byte[]
		Statement: r19 = virtualinvoke r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.owasp.dependencycheck.utils.Checksum: byte[] getChecksum(java.lang.String,java.io.File)>
		SHA-256: 7dd2f49a550f7a8f1c6ca98225cdf91d8bf864ad845bdc4844a35149cca75b83
	Object:
		Variable: r1
		Type: byte[]
		Statement: r3 = virtualinvoke r2.<java.security.MessageDigest: byte[] digest(byte[])>(r1)
		Method: <org.owasp.dependencycheck.utils.Checksum: java.lang.String getChecksum(java.lang.String,byte[])>
		SHA-256: 963318d1baa7e3e731d40df26edd40e766f80569167e37634e4941fd38c4879d
	Object:
		Variable: r2
		Type: java.security.MessageDigest
		Statement: r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(r0)
		Method: <org.owasp.dependencycheck.utils.Checksum: byte[] getChecksum(java.lang.String,java.io.File)>
		SHA-256: cdbccaf2f2d0367ba5d8e9bfeb2957cbcc43121078262c7abe34d1e07e94db0b

Findings in Java Class: org.owasp.dependencycheck.utils.Checksum

	 in Method: byte[] getChecksum(java.lang.String,java.io.File)
		TypestateError violating CrySL rule for MessageDigest (on Object #cdbccaf2f2d0367ba5d8e9bfeb2957cbcc43121078262c7abe34d1e07e94db0b)
			Unexpected call to method digest on object of type java.security.MessageDigest. Expect a call to one of the following methods digest,update
			at statement: r19 = virtualinvoke r2.<java.security.MessageDigest: byte[] digest()>()

		ImpreciseValueExtractionError violating CrySL rule for MessageDigest
			Constraint int pre_len p int 0 could not be evaluted due to insufficient information.
			at statement: virtualinvoke r2.<java.security.MessageDigest: void update(byte[],int,int)>(r18, 0, i0)

		ImpreciseValueExtractionError violating CrySL rule for MessageDigest
			Constraint int pre_len p int 0 could not be evaluted due to insufficient information.
			at statement: virtualinvoke r2.<java.security.MessageDigest: void update(byte[],int,int)>(r18, 0, i0)


Findings in Java Class: org.owasp.dependencycheck.utils.SSLSocketFactoryEx

	 in Method: void initSSLSocketFactoryEx(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #8f3f9fc3c2c7e0e3c7216a2f357929e136b606d7fcd5dd6e2f93b7fc521b4c74)
			First parameter (with value "TLS") should be any of {TLSv1, TLSv1.1, TLSv1.2}
			at statement: $r4 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>("TLS")


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 44
	Number of Objects Analyzed: 6

	CogniCrypt found the following violations. For details see description above.
	ImpreciseValueExtractionError: 2
	TypestateError: 1
	ConstraintError: 1
=====================================================================
Static Analysis took 0 seconds!
Analysis finished after 2 seconds
