Using call graph algorithm CHA
Finished initializing soot
Analysis soot setup done after 0 seconds
Discovered 3 analysis seeds within 2 seconds!
ERROR StatusLogger No Log4j 2 configuration file found. Using default configuration (logging only errors to the console), or user programmatically provided configurations. Set system property 'log4j2.debug' to show Log4j 2 internal initialization logging. See https://logging.apache.org/log4j/2.x/manual/configuration.html for instructions on how to configure Log4j 2
Analysis Time: PT2.840759307S
Estimated Time: PT8.522277921S
Analyzed Objects: 1 of 4
Percentage Completed: 0.25

Analysis Time: PT2.914735423S
Estimated Time: PT4.372103133S
Analyzed Objects: 2 of 5
Percentage Completed: 0.4

Analysis Time: PT2.934525985S
Estimated Time: PT2.934525984S
Analyzed Objects: 3 of 6
Percentage Completed: 0.5

Analysis Time: PT2.940145173S
Estimated Time: PT1.470072586S
Analyzed Objects: 4 of 6
Percentage Completed: 0.67

Analysis Time: PT2.944420246S
Estimated Time: PT0.588884049S
Analyzed Objects: 5 of 6
Percentage Completed: 0.83

Ruleset: 
	com.amazonaws.services.kms.model.GenerateDataKeyRequest
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Cipher
	java.security.KeyPair
	javax.net.ssl.KeyManagerFactory
	MessageDigest
	javax.crypto.spec.PBEParameterSpec
	java.security.KeyStore
	javax.crypto.SecretKey
	java.security.spec.DSAGenParameterSpec
	java.security.Signature
	SSLSocketFactory
	javax.net.ssl.SSLParameters
	java.security.DigestInputStream
	javax.crypto.CipherInputStream
	SSLSocket
	java.security.Key
	javax.net.ssl.KeyStoreBuilderParameters
	javax.net.ssl.TrustManagerFactory
	javax.crypto.CipherOutputStream
	java.security.DigestOutputStream
	java.security.spec.DSAParameterSpec
	java.security.cert.PKIXParameters
	SSLServerSocket
	java.security.KeyPairGenerator
	java.security.AlgorithmParameters
	javax.crypto.spec.DHParameterSpec
	SSLServerSocketFactory
	javax.crypto.KeyGenerator
	javax.crypto.spec.SecretKeySpec
	Stopwatch
	javax.crypto.spec.IvParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.GCMParameterSpec
	javax.crypto.Mac
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.SecureRandom
	java.security.cert.PKIXBuilderParameters
	javax.net.ssl.SSLContext
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.TrustAnchor
	javax.net.ssl.SSLEngine

Analyzed Objects: 
	Object:
		Variable: r3
		Type: byte[]
		Statement: r3 = virtualinvoke r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <net.bull.javamelody.internal.model.CounterRequest: java.lang.String buildId(java.lang.String,java.lang.String)>
		SHA-256: 7e40698a4edd333d797c21bf9ec8d5754a9e36651d0d8f3c9f05c994eadd7ad2
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("SHA-1")
		Method: <net.bull.javamelody.internal.model.UpdateChecker: java.security.MessageDigest getMessageDigestInstance()>
		SHA-256: 8d6a6281ac47a34a725f1e4e749b0527da22180f860a3ef36be4eb6ddb98f690
	Object:
		Variable: r1
		Type: byte[]
		Statement: virtualinvoke $r11.<java.security.SecureRandom: void nextBytes(byte[])>(r1)
		Method: <net.bull.javamelody.internal.web.html.HtmlAbstractReport: java.lang.String getCsrfTokenUrlPart()>
		SHA-256: 546db52869dd067d855c9fec0f5b4162136992a8cf94a7dbc23b3f0f2c794751
	Object:
		Variable: $r11
		Type: java.security.SecureRandom
		Statement: $r11 = new java.security.SecureRandom
		Method: <net.bull.javamelody.internal.web.html.HtmlAbstractReport: java.lang.String getCsrfTokenUrlPart()>
		SHA-256: ac6430e0992e1359f8a902e06bfc4b60062c81a6e7633689a748dca6728a17d1
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("SHA-1")
		Method: <net.bull.javamelody.internal.model.CounterRequest: java.security.MessageDigest getMessageDigestInstance()>
		SHA-256: d0e31f10d530ba09143d4ba329c80e006910656094588bceb68af039291f9b06
	Object:
		Variable: r2
		Type: byte[]
		Statement: r2 = virtualinvoke r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <net.bull.javamelody.internal.model.UpdateChecker: java.lang.String hash(java.lang.String)>
		SHA-256: b233595816a19a2e9426b9dfef1e4c4d28b47b8f0894af1dfbc77a427101e223

Findings in Java Class: net.bull.javamelody.internal.model.CounterRequest

	 in Method: java.security.MessageDigest getMessageDigestInstance()
		ConstraintError violating CrySL rule for MessageDigest (on Object #d0e31f10d530ba09143d4ba329c80e006910656094588bceb68af039291f9b06)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("SHA-1")


Findings in Java Class: net.bull.javamelody.internal.model.UpdateChecker

	 in Method: java.security.MessageDigest getMessageDigestInstance()
		ConstraintError violating CrySL rule for MessageDigest (on Object #8d6a6281ac47a34a725f1e4e749b0527da22180f860a3ef36be4eb6ddb98f690)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("SHA-1")


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 44
	Number of Objects Analyzed: 6

	CogniCrypt found the following violations. For details see description above.
	ConstraintError: 2
=====================================================================
Static Analysis took 2 seconds!
Analysis finished after 7 seconds
